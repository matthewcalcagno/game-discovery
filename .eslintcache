[{"D:\\Projects\\web-game\\src\\index.js":"1","D:\\Projects\\web-game\\src\\App.js":"2","D:\\Projects\\web-game\\src\\components\\Drawer.js":"3","D:\\Projects\\web-game\\src\\components\\Card.js":"4","D:\\Projects\\web-game\\src\\store.js":"5","D:\\Projects\\web-game\\src\\reducers\\index.js":"6","D:\\Projects\\web-game\\src\\reducers\\GameList.js":"7","D:\\Projects\\web-game\\src\\helpers\\api.js":"8","D:\\Projects\\web-game\\src\\actions\\index.js":"9","D:\\Projects\\web-game\\src\\components\\ListPage.js":"10","D:\\Projects\\web-game\\src\\components\\ShowGame.js":"11","D:\\Projects\\web-game\\src\\reducers\\GameInfo.js":"12","D:\\Projects\\web-game\\src\\components\\Gallery.js":"13","D:\\Projects\\web-game\\src\\components\\Additions.js":"14","D:\\Projects\\web-game\\src\\components\\GenreList.js":"15"},{"size":349,"mtime":1608837243367,"results":"16","hashOfConfig":"17"},{"size":1856,"mtime":1608977797203,"results":"18","hashOfConfig":"17"},{"size":3944,"mtime":1609004746335,"results":"19","hashOfConfig":"17"},{"size":1954,"mtime":1609007231325,"results":"20","hashOfConfig":"17"},{"size":188,"mtime":1608825871170,"results":"21","hashOfConfig":"17"},{"size":177,"mtime":1608890911074,"results":"22","hashOfConfig":"17"},{"size":347,"mtime":1608895799046,"results":"23","hashOfConfig":"17"},{"size":203,"mtime":1608825350704,"results":"24","hashOfConfig":"17"},{"size":3212,"mtime":1609001604447,"results":"25","hashOfConfig":"17"},{"size":1564,"mtime":1608977933142,"results":"26","hashOfConfig":"17"},{"size":4297,"mtime":1609007373271,"results":"27","hashOfConfig":"17"},{"size":617,"mtime":1609001654452,"results":"28","hashOfConfig":"17"},{"size":602,"mtime":1609005935582,"results":"29","hashOfConfig":"17"},{"size":1020,"mtime":1609007058701,"results":"30","hashOfConfig":"17"},{"size":1127,"mtime":1609006791504,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"p4jebi",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"35"},"D:\\Projects\\web-game\\src\\index.js",["74","75"],"import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport {Provider} from \"react-redux\"\r\nimport store from \"./store\"\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nReactDOM.render( <BrowserRouter > <Provider store={store}> <App /> </Provider> </BrowserRouter>, document.querySelector(\"#root\"))",["76","77"],"D:\\Projects\\web-game\\src\\App.js",["78","79"],"import React, {useEffect} from \"react\"\r\nimport \"./assets/css/style.css\"\r\nimport Drawer from \"./components/Drawer\"\r\nimport ShowGame from \"./components/ShowGame\"\r\nimport ListPage from \"./components/ListPage\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nconst App = () => {\r\n    return (\r\n       <div>\r\n        <Grid container spacing={1}>\r\n        <Grid item xs={2} sm={2}>\r\n           <Drawer />\r\n        </Grid>\r\n        <Grid item xs={10} sm={10}>\r\n            <Switch>\r\n             \r\n             <Route path=\"/juego/:slug\" exact component={(props)=>  <ShowGame slugSearch={props.match.params.slug}  /> }  />\r\n             <Route path=\"/\" exact component={()=>  <ListPage action=\"DISCOVER\" title=\"Nuevo y de moda\"  /> } />\r\n             <Route path=\"/juegos-para-pc\" exact component={()=>  <ListPage action=\"PC_GAMES\" title=\"Encuentra tu nuevo juego de PC\"  /> } />\r\n             <Route path=\"/nuevos-lanzamientos\" exact component={()=>  <ListPage action=\"UPCOMING_GAMES\" title=\"Nuevos juegos que se lanzarán\"  /> } />\r\n             <Route path=\"/mejores-juegos-del-ano\" exact component={()=>  <ListPage action=\"BEST_YEAR\" title=\"Los mejores juegos del año\"  /> } />\r\n             <Route path=\"/mejores-juegos-del-ano-pasado\" exact component={()=>  <ListPage action=\"BEST_LAST_YEAR\" title=\"Los mejores juegos del año pasado\"  /> } />\r\n             <Route path=\"/juegos-para-playstation\" exact component={()=>  <ListPage action=\"PS_GAMES\" title=\"Encuentra tu nuevo juego para la Playstation\"  /> } />\r\n             <Route path=\"/juegos-para-xbox\" exact component={()=>  <ListPage action=\"XBOX_GAMES\" title=\"Encuentra tu nuevo juego para la Xbox\"  /> } />\r\n \r\n            </Switch>\r\n           <ListPage />\r\n        </Grid>\r\n        </Grid>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default App","D:\\Projects\\web-game\\src\\components\\Drawer.js",["80","81","82","83","84","85","86","87"],"import React from \"react\"\r\nimport {Drawer, List, ListItem, ListItemText} from \"@material-ui/core\"\r\nimport {Link} from \"react-router-dom\"\r\nimport PsIcon from \"../assets/imgs/playstation-icon-white.png\"\r\nimport XboxIcon from \"../assets/imgs/xbox-icon-white.png\"\r\nimport PcIcon from  \"../assets/imgs/pc-icon-white.png\"\r\nimport SwitchIcon from  \"../assets/imgs/switch-icon-white.png\"\r\nimport CalendarIcon from  \"../assets/imgs/calendar-icon-white.png\"\r\nimport BestYearIcon from  \"../assets/imgs/best-year-icon-white.png\"\r\nimport TrophyIcon from  \"../assets/imgs/trophy-icon-white.png\"\r\nimport StarIcon from  \"../assets/imgs/star-icon-white.png\"\r\n\r\nconst DrawerComponent = () => {\r\n\r\n    return (\r\n        \r\n        <Drawer\r\n        className=\"nav-drawer\"\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={true}\r\n        >\r\n              <ListItem>\r\n                    <ListItemText className=\"nav-title\">Yulopsa.io<br></br><hr></hr></ListItemText>\r\n                </ListItem>\r\n            <List>\r\n                <ListItem>\r\n                    <ListItemText className=\"nav-title\">Tendencias</ListItemText>\r\n                </ListItem>\r\n                <ListItem button>\r\n                <div ><img  style={{width: \"30px\", padding: \"1px\", marginRight: \"10px\"}} src={StarIcon} /> </div> <Link to=\"/\"><ListItemText className=\"nav-subtitle\">Descubrimiento</ListItemText></Link>\r\n                </ListItem>\r\n                <ListItem button>\r\n                <div ><img  style={{width: \"30px\", padding: \"1px\", marginRight: \"10px\"}} src={CalendarIcon} /> </div>  <Link to=\"/nuevos-lanzamientos\"> <ListItemText className=\"nav-subtitle\">Próximos juegos</ListItemText> </Link> \r\n                </ListItem>\r\n \r\n                <ListItem>\r\n                    <ListItemText className=\"nav-title\">Los mejores</ListItemText>\r\n                </ListItem>\r\n                <ListItem button>\r\n                <div ><img  style={{width: \"30px\", padding: \"1px\", marginRight: \"10px\"}} src={TrophyIcon} /> </div> <Link to=\"/mejores-juegos-del-ano\">   <ListItemText className=\"nav-subtitle\">Lo mejor del año</ListItemText></Link>\r\n                </ListItem>\r\n                <ListItem button>\r\n                <div ><img  style={{width: \"30px\", padding: \"1px\", marginRight: \"10px\"}} src={BestYearIcon} /> </div>  <Link to=\"/mejores-juegos-del-ano-pasado\"> <ListItemText className=\"nav-subtitle\">Popular del año pasado</ListItemText> </Link>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText className=\"nav-title\">Géneros de juego</ListItemText>\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText className=\"nav-title\">Plataformas</ListItemText>\r\n                </ListItem>\r\n                <ListItem button>\r\n                <div ><img  style={{width: \"30px\", padding: \"1px\", marginRight: \"10px\"}} src={PcIcon} /> </div> <Link to=\"/juegos-para-pc\"><ListItemText className=\"nav-subtitle\">PC</ListItemText></Link>\r\n                </ListItem>\r\n                <ListItem button>\r\n                <div ><img  style={{width: \"30px\", padding: \"1px\", marginRight: \"10px\"}} src={PsIcon} /> </div> <Link to=\"/juegos-para-playstation\"> <ListItemText className=\"nav-subtitle\">  Playstation  </ListItemText>   </Link>             </ListItem>\r\n                <ListItem button>\r\n                <div ><img  style={{width: \"30px\", padding: \"1px\", marginRight: \"10px\"}} src={XboxIcon} /> </div> <Link to=\"/juegos-para-xbox\"> <ListItemText className=\"nav-subtitle\">  Xbox</ListItemText> </Link>\r\n                </ListItem>\r\n                <ListItem button>\r\n                <div ><img  style={{width: \"30px\", padding: \"1px\", marginRight: \"10px\"}} src={SwitchIcon} /> </div> <ListItemText className=\"nav-subtitle\">  Switch</ListItemText>\r\n\r\n                </ListItem>\r\n                \r\n            </List>\r\n\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default DrawerComponent","D:\\Projects\\web-game\\src\\components\\Card.js",["88","89","90"],"import React from \"react\"\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport PsIcon from \"../assets/imgs/playstation-icon-white.png\"\r\nimport XboxIcon from \"../assets/imgs/xbox-icon-white.png\"\r\nimport PcIcon from  \"../assets/imgs/pc-icon-white.png\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst CardComponent = props => {\r\n  const colorScore = (score) => {\r\n   if (score > 74) return \"metacritic-good\"\r\n   if (score > 49 && score < 75) return \"metacritic-meh \"\r\n   else if (!score) return \" metacritic-none\"\r\n   return \"metacritic-bad\"\r\n  }\r\n  const {name,image, metacritic, parent_platforms, slug, bgColor} = props\r\n \r\n  const renderPlatforms = parent_platforms => {\r\n   return parent_platforms.map( platform => {\r\n     let imgIcon\r\n     if (platform.platform.slug === \"pc\") imgIcon = PcIcon\r\n     else if (platform.platform.slug === \"xbox\") imgIcon = XboxIcon\r\n     else if (platform.platform.slug === \"playstation\") imgIcon = PsIcon\r\n    if (!imgIcon) return undefined\r\n     return (\r\n       <div style={{ marginLeft: \"0.5rem\"}}>\r\n                <img style={{width: \"15px\", marginTop: \"2px\"}} src={imgIcon} />\r\n       </div>\r\n     )\r\n   })\r\n  }\r\n    return (\r\n      <Link to={\"/juego/\"+slug} >\r\n        <Card className=\"card-item\">\r\n          <CardMedia\r\n            className=\"card-media\"\r\n            image={image}\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          <CardContent style={{backgroundColor: bgColor || \" \"}}>\r\n            <div className=\"metacritic-card\">{renderPlatforms(parent_platforms)}<span className={colorScore(metacritic)}>{metacritic}</span></div>\r\n           <h2>{name}</h2>\r\n          </CardContent>\r\n      </Card>\r\n      </Link>\r\n    )\r\n}\r\n\r\nexport default CardComponent","D:\\Projects\\web-game\\src\\store.js",[],"D:\\Projects\\web-game\\src\\reducers\\index.js",[],"D:\\Projects\\web-game\\src\\reducers\\GameList.js",["91"],"export default function(state = {}, action) {\r\n   switch (action.type) {\r\n    case \"GET_GAMES\":\r\n        return {...action.payload}\r\n    case \"GET_MORE_GAMES\":\r\n        return {previous: action.payload.previous, next: action.payload.next, results: [ ...state.results, ...action.payload.results] }\r\n    \r\n    default:\r\n        return state\r\n   }\r\n}","D:\\Projects\\web-game\\src\\helpers\\api.js",[],["92","93"],"D:\\Projects\\web-game\\src\\actions\\index.js",[],"D:\\Projects\\web-game\\src\\components\\ListPage.js",["94","95"],"import React, { useEffect } from \"react\";\r\nimport Card from \"./Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { connect } from \"react-redux\";\r\nimport { getGames, loadMoreGames } from \"../actions\";\r\nimport { Waypoint } from \"react-waypoint\";\r\nconst ListPage = (props) => {\r\n  useEffect(() => {\r\n    const { getGames, action } = props;\r\n    console.log(action);\r\n    window.scrollTo(0, 0);\r\n    getGames(action);\r\n  }, []);\r\n\r\n  const { results } = props;\r\n  if (results == undefined) return \" \";\r\n  console.log(props);\r\n\r\n  const loadGames = () => {\r\n    const { loadMoreGames, next } = props;\r\n    if (next)  loadMoreGames(next);\r\n   \r\n  };\r\n  const { title } = props;\r\n\r\n  return (\r\n    <div className=\"game-list\" style={{ paddingTop: \"2rem\" }}>\r\n      <h1>{title}</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        <Grid container>\r\n          {results.map((game) => {\r\n            return (\r\n              <Grid key={game.id} item sm={3}>\r\n                <Card\r\n                  name={game.name}\r\n                  image={game.background_image}\r\n                  metacritic={game.metacritic}\r\n                  key={game.id}\r\n                  parent_platforms={game.parent_platforms}\r\n                  slug={game.slug}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n          <Waypoint onEnter={loadGames} />\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return state.GameList;\r\n};\r\n\r\nexport default connect(mapStateToProps, { getGames, loadMoreGames })(ListPage);\r\n","D:\\Projects\\web-game\\src\\components\\ShowGame.js",["96","97","98","99","100","101"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getGameInfo } from \"../actions\";\r\nimport PsIcon from \"../assets/imgs/playstation-icon-white.png\";\r\nimport XboxIcon from \"../assets/imgs/xbox-icon-white.png\";\r\nimport PcIcon from \"../assets/imgs/pc-icon-white.png\";\r\nimport SwitchIcon from \"../assets/imgs/switch-icon-white.png\";\r\nimport Gallery from \"./Gallery\"\r\nimport Additions from \"./Additions\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GenreList from \"./GenreList\"\r\nconst ShowGame = (props) => {\r\n  const { slugSearch } = props;\r\n  useEffect(() => {\r\n    const {\r\n      getGameInfo,\r\n      slugSearch,\r\n      getGameScreenshots,\r\n      getGameMovies,\r\n      id,\r\n    } = props;\r\n    window.scrollTo(0, 0);\r\n    getGameInfo(slugSearch);\r\n  }, [slugSearch]);\r\n\r\n\r\n  const {\r\n    name,\r\n    metacritic,\r\n    screenshots,\r\n    genres,\r\n    background_image,\r\n    parent_platforms,\r\n    released,\r\n    additions,\r\n    series,\r\n  } = props;\r\n\r\n  const renderPlatforms = (parent_platforms) => {\r\n    return parent_platforms.map((platform) => {\r\n      let imgIcon;\r\n      if (platform.platform.slug === \"pc\") imgIcon = PcIcon;\r\n      else if (platform.platform.slug === \"xbox\") imgIcon = XboxIcon;\r\n      else if (platform.platform.slug === \"playstation\") imgIcon = PsIcon;\r\n      if (!imgIcon) return undefined;\r\n      return (\r\n        <div style={{ marginLeft: \"0.5rem\" }}>\r\n          <img style={{ width: \"20px\", marginTop: \"2px\" }} src={imgIcon} />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  if (!parent_platforms) return \" \";\r\n  console.log(props);\r\n  const releaseDate = new Date(released);\r\n  const monthNames = [\r\n    \"ENERO\",\r\n    \"FEBRERO\",\r\n    \"MARZO\",\r\n    \"ABRIL\",\r\n    \"MAYO\",\r\n    \"JUNIO\",\r\n    \"JULIO\",\r\n    \"AGOSTO\",\r\n    \"SEPTIEMBRE\",\r\n    \"OCTUBRE\",\r\n    \"NOVIEMBRE\",\r\n    \"DICIEMBRE\",\r\n  ];\r\n  return (\r\n    <div className=\"game-info\">\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          background: \"center top\",\r\n          backgroundSize: \"100%\",\r\n          zIndex: \"1\",\r\n          height: \"700px\",\r\n          backgroundColor: \"transparent\",\r\n          marginTop: \"-49px\",\r\n          backgroundImage:\r\n            \"linear-gradient(rgba(15, 15, 15, 0), rgb(21, 21, 21)), linear-gradient(rgba(21, 21, 21, 0.8), rgba(21, 21, 21, 0.5)), url(\" +\r\n            background_image +\r\n            \")\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            paddingTop: \"450px\",\r\n            marginLeft: \"50px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <span\r\n              style={{\r\n                fontSize: \"0.8rem\",\r\n                color: \"black\",\r\n                backgroundColor: \"rgba(255,255,255,0.9)\",\r\n                padding: \"7px\",\r\n                borderRadius: \"10px\",\r\n              }}\r\n            >\r\n              {monthNames[releaseDate.getMonth()] +\r\n                \" \" +\r\n                releaseDate.getDate() +\r\n                \", \" +\r\n                releaseDate.getFullYear()}\r\n            </span>\r\n          </div>\r\n          {name}\r\n        </h1>\r\n        <div style={{ display: \"flex\", marginLeft: \"50px\" }}>\r\n          {renderPlatforms(parent_platforms)}\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"60px\",\r\n            right: \"60px\",\r\n            fontSize: \"2rem\",\r\n            border: metacritic ? \"4px solid white\" : \"none\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          {metacritic}\r\n        </div>\r\n      </div>\r\n\r\n      <Grid item sm={12}>\r\n      {screenshots ? <Gallery screenshots={screenshots.results}/> : \" \"}\r\n      </Grid>\r\n     \r\n\r\n     <br></br>\r\n      <Grid  item sm={12}>\r\n      {additions ? <Additions title=\"DLCs y Extras\" bgColor=\"#451e70\" additions={additions.results} /> : \" \"}\r\n      </Grid>\r\n      <Grid  item sm={12}>\r\n      {series ? <Additions title=\"Juegos relacionados\" additions={series.results} /> : \" \"}\r\n      </Grid>\r\n      <Grid  item sm={12}>\r\n      {genres ? <GenreList title=\"Juegos relacionados\" additions={genres} /> : \" \"}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return state.GameInfo;\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getGameInfo,\r\n})(ShowGame);\r\n","D:\\Projects\\web-game\\src\\reducers\\GameInfo.js",["102"],"export default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case \"SET_GAME_INFO\":\r\n      return action.payload;\r\n    case \"SET_GAME_INFO_SS\":\r\n      return { ...state, screenshots: action.payload };\r\n    case \"SET_GAME_INFO_MOVIES\":\r\n      return { ...state, movies: action.payload };\r\n    case \"SET_GAME_INFO_ADDITIONS\":\r\n      return { ...state, additions: action.payload };\r\n    case \"SET_GAME_INFO_SERIES\":\r\n      return { ...state, series: action.payload };\r\n      case \"SET_GAME_INFO_TROPHIES\":\r\n      return { ...state, trophies: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\Projects\\web-game\\src\\components\\Gallery.js",["103"],"import React, { useState } from \"react\";\r\nimport GalleryComponent from 'react-grid-gallery';\r\n\r\nconst Gallery = (props) => {\r\n  const {screenshots} = props\r\n  console.log(screenshots)\r\n  const photos = screenshots.map(ss => {\r\n      return {\r\n        src: ss.image,\r\n        thumbnail: ss.image,\r\n        thumbnailWidth: ss.width,\r\n        thumbnailHeight: ss.height,\r\n      }\r\n  })\r\n\r\n \r\n \r\n  return (\r\n    <div className=\"screenshots\">\r\n        <h3 style={{fontSize: \"3rem\"}}>Capturas de pantalla</h3>\r\n        <GalleryComponent images={photos}/>\r\n    </div>\r\n  )\r\n  \r\n};\r\n\r\nexport default Gallery;\r\n","D:\\Projects\\web-game\\src\\components\\Additions.js",[],"D:\\Projects\\web-game\\src\\components\\GenreList.js",["104","105"],"import React from \"react\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from '@material-ui/core/Card';\r\n\r\n\r\nconst GenreList = (props) => {\r\n  const {additions, title} = props\r\n  console.log(additions)\r\n  const additionsRender = additions.map(game => {\r\n      return (\r\n            <Grid key={game.id} item sm={3}>\r\n               <Card className=\"card-item\">\r\n                <CardContent style={{backgroundSize: \"100%\", background: \"  linear-gradient(rgba(0,0,0,2), rgba(0,0,0,0.7)), url('\" +game.image_background + \"') center top\"}}>\r\n                <div style={{textAlign: \"center\"}}><h2>{game.name}</h2></div>\r\n                </CardContent>\r\n            </Card>\r\n              </Grid>\r\n      )\r\n  })\r\n\r\n\r\n if (additions.length < 1) return (\r\n     <div style={{paddingTop: \"15rem\"}}></div>\r\n )\r\n  return (\r\n    <div>\r\n        <h3 style={{fontSize: \"2.5rem\"}}>Géneros</h3>\r\n        <Grid container>\r\n        {additionsRender}\r\n        </Grid>\r\n    </div>\r\n  )\r\n  \r\n};\r\n\r\nexport default GenreList;\r\n",{"ruleId":"106","severity":1,"message":"107","line":6,"column":25,"nodeType":"108","messageId":"109","endLine":6,"endColumn":30},{"ruleId":"106","severity":1,"message":"110","line":6,"column":32,"nodeType":"108","messageId":"109","endLine":6,"endColumn":38},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"106","severity":1,"message":"115","line":1,"column":16,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"116","line":7,"column":10,"nodeType":"108","messageId":"109","endLine":7,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":31,"column":23,"nodeType":"119","endLine":31,"endColumn":107},{"ruleId":"117","severity":1,"message":"118","line":34,"column":23,"nodeType":"119","endLine":34,"endColumn":111},{"ruleId":"117","severity":1,"message":"118","line":41,"column":23,"nodeType":"119","endLine":41,"endColumn":109},{"ruleId":"117","severity":1,"message":"118","line":44,"column":23,"nodeType":"119","endLine":44,"endColumn":111},{"ruleId":"117","severity":1,"message":"118","line":53,"column":23,"nodeType":"119","endLine":53,"endColumn":105},{"ruleId":"117","severity":1,"message":"118","line":56,"column":23,"nodeType":"119","endLine":56,"endColumn":105},{"ruleId":"117","severity":1,"message":"118","line":58,"column":23,"nodeType":"119","endLine":58,"endColumn":107},{"ruleId":"117","severity":1,"message":"118","line":61,"column":23,"nodeType":"119","endLine":61,"endColumn":109},{"ruleId":"106","severity":1,"message":"120","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":22},{"ruleId":"106","severity":1,"message":"121","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":19},{"ruleId":"117","severity":1,"message":"118","line":30,"column":17,"nodeType":"119","endLine":30,"endColumn":80},{"ruleId":"122","severity":1,"message":"123","line":1,"column":1,"nodeType":"124","endLine":11,"endColumn":2},{"ruleId":"111","replacedBy":"125"},{"ruleId":"113","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":13,"column":6,"nodeType":"129","endLine":13,"endColumn":8,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":16,"column":15,"nodeType":"133","messageId":"134","endLine":16,"endColumn":17},{"ruleId":"106","severity":1,"message":"135","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":18},{"ruleId":"106","severity":1,"message":"136","line":18,"column":7,"nodeType":"108","messageId":"109","endLine":18,"endColumn":25},{"ruleId":"106","severity":1,"message":"137","line":19,"column":7,"nodeType":"108","messageId":"109","endLine":19,"endColumn":20},{"ruleId":"106","severity":1,"message":"138","line":20,"column":7,"nodeType":"108","messageId":"109","endLine":20,"endColumn":9},{"ruleId":"127","severity":1,"message":"128","line":24,"column":6,"nodeType":"129","endLine":24,"endColumn":18,"suggestions":"139"},{"ruleId":"117","severity":1,"message":"118","line":48,"column":11,"nodeType":"119","endLine":48,"endColumn":76},{"ruleId":"122","severity":1,"message":"123","line":1,"column":1,"nodeType":"124","endLine":18,"endColumn":2},{"ruleId":"106","severity":1,"message":"140","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"141","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":17},{"ruleId":"106","severity":1,"message":"142","line":9,"column":21,"nodeType":"108","messageId":"109","endLine":9,"endColumn":26},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'useEffect' is defined but never used.","'BrowserRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["143"],["144"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["145"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'SwitchIcon' is defined but never used.","'getGameScreenshots' is assigned a value but never used.","'getGameMovies' is assigned a value but never used.","'id' is assigned a value but never used.",["146"],"'useState' is defined but never used.","'CardMedia' is defined but never used.","'title' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [props]",{"range":"151","text":"152"},"Update the dependencies array to be: [props, slugSearch]",{"range":"153","text":"154"},[429,431],"[props]",[798,810],"[props, slugSearch]"]